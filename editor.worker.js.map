{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_locale","undefined","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","NODE_ENV","BASE_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","userAgent","indexOf","language","_globals","self","nextTick","fn","setTimeout","arch","execPath","title","pid","browser","env","argv","binding","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","factory","this","finallyConstructor","callback","constructor","then","reason","reject","setTimeoutFunc","noop","thisArg","apply","arguments","Promise","TypeError","_state","_handled","_value","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","promise","push","newValue","finale","length","_unhandledRejectionFn","len","Handler","done","ex","prom","all","arr","args","Array","slice","remaining","res","val","race","values","setImmediate","err","console","warn","globalNS","window","g","Function","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","splitPathRe","splitPath","filename","exec","filter","xs","f","resolvedPath","resolvedAbsolute","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","basename","ext","extname","str","ErrorHandler","listeners","unexpectedErrorHandler","stack","message","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","isPromiseCanceledError","transformErrorForSerialization","error","name_1","stacktrace","$isError","canceledName","illegalArgument","lifecycle_dispose","first","rest","_i","isArray","dispose","combinedDisposable","disposables","toDisposable","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","None","freeze","ImmortalReference","getAllPropertyNames","obj","proto","getPrototypeOf","getOwnPropertyNames","__extends","extendStatics","b","setPrototypeOf","__proto__","__","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","_this","req","String","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","simpleWorker_SimpleWorkerServer","_super","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","postMessage","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","onmessage","initialize","loaderConfig","methods","_a","prop","baseUrl","vs","catchError","handlerModule","_b","mergeSort","data","compare","_sort","_merge","a","lo","mid","hi","aux","leftIdx","rightIdx","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","charCodeAt","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Iterator","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","MaxDifferencesHistory","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","changes","ComputeDiffRecursive","PrettifyChanges","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","diagonal","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","max","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","delta","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","element","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","iterator_extends","FIN","_empty","next","empty","fromArray","array","elements","map","iterator","collect","uri_a","ArrayIterator","items","current","uri_extends","ArrayNavigator","previous","parent","MappedIterator","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_validateUri","_strict","scheme","authority","query","fragment","_referenceResolution","_slash","_regexp","uri_URI","URI","schemeOrData","isUri","thing","fsPath","with","toString","_makeFsPath","configurable","_URI","match","decodeURIComponent","file","replace","idx","substring","components","skipEncoding","_asFormatted","toJSON","revive","_fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","code","encodeURIComponent","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","equals","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","aColumn","bColumn","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","aExists","bExists","compareRangesUsingEnds","spansMultipleLines","firstNonWhitespaceIndex","chCode","lastNonWhitespaceIndex","startIndex","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffAlgo","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","Date","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","now","Uint8Matrix","rows","cols","Uint8Array","_data","row","set","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","midStop","midStart","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","newLengths","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","source","USUAL_WORD_SEPARATORS_1","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","flags","ignoreCase","multiline","unicode","lastIndex","getWordAtPosFast","textOffset","lastIndexOf","matchIndex","word","getWordAtPosSlow","getWordAtText","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","functional_once","didCall","event_Event","Node","linkedList_LinkedList","LinkedList","_size","_first","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","shift","node","candidate","anchor","Event","_disposable","once","event","thisArgs","didFire","snapshot","each","signal","any","events","reduce","merge","initial","output","emitter","event_Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","clearTimeout","_output","stopwatch","latch","cache","firstCall","shouldEmit","buffer","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","id","removeListener","fromPromise","toPromise","cancellation_CancellationToken","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","random","_warnCountdown","_stacks","clear","check","listenerCount","threshold","count","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","firstListener","removeMonitor","remove","size","_noop","hasListeners","_deliveryQueue","iter","event_1","shortcutEvent","EventMultiplexer","hook","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","context","CancellationToken","isCancellationToken","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","MutableToken","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyChord","firstPart","secondPart","chordPart","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","keyCodes_ChordKeybinding","isDuplicateModifierCase","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","ChordKeybinding","selection_extends","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyLabel","keyAriaLabel","ResolvedKeybinding","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","offset","TokenizationResult","tokens","endState","TokenizationResult2","standaloneBase_KeyMod","KeyMod","chord","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","Uri","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","ranges","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_BaseEditorSimpleWorker","BaseEditorSimpleWorker","foreignModuleFactory","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","diffComputer","identical","_modelsAreIdentical","originalLineCount","modifiedLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","aRng","bRng","edits_1","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","_getModels","fmr","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","_models","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","importScripts","monaco","initialized","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"e500\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _a;\n    if (isNativeClass(ctor)) {\n        return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n    }\n    else {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n}\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing) {\n    return typeof thing === 'function'\n        && thing.hasOwnProperty('prototype')\n        && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = null; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Similar to `buffer` but it buffers indefinitely and repeats\n     * the buffered events to every new listener.\n     */\n    function echo(event, nextTick, buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (buffer === void 0) { buffer = []; }\n        buffer = buffer.slice();\n        event(function (e) {\n            buffer.push(e);\n            emitter.fire(e);\n        });\n        var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n        var emitter = new Emitter({\n            onListenerDidAdd: function (emitter, listener, thisArgs) {\n                if (nextTick) {\n                    setTimeout(function () { return flush(listener, thisArgs); });\n                }\n                else {\n                    flush(listener, thisArgs);\n                }\n            }\n        });\n        return emitter.event;\n    }\n    Event.echo = echo;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n        var seen = Object.create(null);\n        seen[currentWord.word] = true;\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"sourceRoot":""}